@using Microsoft.AspNetCore.Identity
@using ELM.Areas.Identity.Data
@inject SignInManager<WebUser> SignInManager
@inject UserManager<WebUser> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>@ViewData["Title"] - ELM - Expense List Maker</title>
  <link rel="icon" href="~/img/logo.png">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css">
  <link rel="stylesheet" href="~/lib/ELM/css/bootstrap.min.css" />
  <link rel="stylesheet" href="~/lib/ELM/css/mdb.css"/>
  <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

 @if (SignInManager.IsSignedIn(User))
 {
   <body class="fixed-sn white-skin">
   
<!--Main Navigation-->
<header>
  <!--Navbar-->
  <partial name="_TopNav"/>
</header>
<!--Main Navigation-->
    
<!--Main content-->
<main style=" margin-top: 5px;">
    
  <!--First container-->
  <div class="container-fluid ">
    @RenderBody()
  </div>
             
</main>
           
<partial name="_Footer"/>
<script src="~/lib/ELM/js/jquery-3.4.1.min.js"></script>
<script src="~/lib/ELM/js/popper.min.js"></script>
<script src="~/lib/ELM/js/bootstrap.min.js"></script>
<script src="~/lib/ELM/js/mdb.min.js"></script>
<partial name="_ValidationScriptsPartial"/>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
        // SideNav Initialization
        $(".button-collapse").sideNav();
    
        let container = document.querySelector('.custom-scrollbar');
        let ps = new PerfectScrollbar(container, {
          wheelSpeed: 2,
          wheelPropagation: true,
          minScrollbarLength: 20
        });
    
        // Data Picker Initialization
        $('.datepicker').pickadate();
    
        // Material Select Initialization
        $(document).ready(function () {
          $('.mdb-select').material_select();
        });
    
        // Tooltips Initialization
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })
    
      </script>
    
<script>
        $(function () {
          let data = {
            labels: ["January", "February", "March", "April", "May", "June", "July"],
            datasets: [{
              label: "My First dataset",
              fillColor: "rgba(220,220,220,0.2)",
              strokeColor: "rgba(220,220,220,1)",
              pointColor: "rgba(220,220,220,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(0,0,0,.15)",
              data: [65, 59, 80, 81, 56, 55, 40],
              backgroundColor: "#4CAF50",
            }, {
              label: "My Second dataset",
              fillColor: "rgba(255,255,255,.25)",
              strokeColor: "rgba(255,255,255,.75)",
              pointColor: "#fff",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(0,0,0,.15)",
              data: [28, 48, 40, 19, 86, 27, 90]
            }]
          };
    
    
          let dataPie = [{
            value: 300,
            color: "#4caf50",
            highlight: "#66bb6a",
            label: "Google Chrome"
          }, {
            value: 50,
            color: "#03a9f4",
            highlight: "#29b6f6",
            label: "Edge"
          }, {
            value: 100,
            color: "#d32f2f",
            highlight: "#e53935",
            label: "Firefox"
          }]
    
          let option = {
            responsive: true,
            // set font color
            scaleFontColor: "#fff",
            // font family
            defaultFontFamily: "'Roboto', sans-serif",
            // background grid lines color
            scaleGridLineColor: "rgba(255,255,255,.1)",
            // hide vertical lines
            scaleShowVerticalLines: false,
          };
    
          // // Get the context of the canvas element we want to select
          // var ctx = document.getElementById("sales").getContext('2d');
          // var myLineChart = new Chart(ctx).Line(data, option); //'Line' defines type of the chart.
    
          // // Get the context of the canvas element we want to select
          // var ctx = document.getElementById("conversion").getContext('2d');
          // var myRadarChart = new Chart(ctx).Radar(data, option);
    
          // Get the context of the canvas element we want to select
    
          //bar
          let ctxB = document.getElementById("traffic").getContext('2d');
          let myBarChart = new Chart(ctxB, {
            type: 'bar',
            data: {
              labels: ["January", "Febuary", "March", "April", "May", "June"],
              datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)'
                ],
                borderColor: [
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)'
                ],
                borderWidth: 1
              }]
            },
            options: {
              legend: {
                labels: {
                  fontColor: "white"
                }
              },
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero: true,
                    fontColor: "white"
                  }
                }],
                xAxes: [{
                  ticks: {
                    fontColor: "white"
                  }
                }]
              }
            }
          });
    
          //pie
          let ctxP = document.getElementById("doughnutChart").getContext('2d');
          let myPieChart = new Chart(ctxP, {
            type: 'doughnut',
            data: {
              labels: ["March", "April", "May", "June"],
              datasets: [{
                data: [160, 50, 80, 60],
                backgroundColor: ["#4285F4", "#ffbb33", "#29b6f6", "#FF5252"],
                hoverBackgroundColor: ["#6ea0f2", "#fec451", "#52c3f6", "#fa6e6e"]
              }]
            },
            options: {
              responsive: true
            }
          });
    
        });
    
      </script>
    
<script>
        $(function () {
          $('.min-chart#chart-sales').easyPieChart({
            barColor: "#4caf50",
            onStep: function (from, to, percent) {
              $(this.el).find('.percent').text(Math.round(percent));
            }
          });
        });
    
        $(function () {
          $('#dark-mode').on('click', function (e) {
    
            e.preventDefault();
    
            $('footer, .card').toggleClass('dark-card-admin');
            $('body, .navbar').toggleClass('white-skin navy-blue-skin');
            $(this).toggleClass('white text-dark btn-outline-black');
            $('body').toggleClass('dark-bg-admin');
            $('h6, h1, h2, .card, p, td, th, i, li a, h4, input, label').not(
              '#slide-out i, #slide-out a, .dropdown-item i, .dropdown-item').toggleClass('text-white');
            $('.btn-dash').toggleClass('grey blue').toggleClass('lighten-3 darken-3');
            $('.gradient-card-header').toggleClass('white black lighten-4');
            $('.list-panel a').toggleClass('navy-blue-bg-a text-white').toggleClass('list-group-border');
            $('.mode').toggleClass('dark-bg-admin white-text');
    
          });
        });
    
      </script>
    
@await RenderSectionAsync("Scripts", required: false)
</body>

   
}else{
<body class = "white-skin">
 

    
<!--Main Navigation-->
<header>
  <!--Navbar-->
  <partial name="_TopNav"/>
</header>
<!--Main Navigation-->
    
<!--Main content-->
<main style=" margin-top: 90px;">
    
  <!--First container-->
  <div class="container-fluid  mt-5 mb-5">
    @RenderBody()
  </div>
             
</main>
           
<partial name="_Footer"/>
<script src="~/lib/ELM/js/jquery-3.4.1.min.js"></script>
<script src="~/lib/ELM/js/popper.min.js"></script>
<script src="~/lib/ELM/js/bootstrap.min.js"></script>
<script src="~/lib/ELM/js/mdb.min.js"></script>
<partial name="_ValidationScriptsPartial"/>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
        // SideNav Initialization
        $(".button-collapse").sideNav();
    
        let container = document.querySelector('.custom-scrollbar');
        let ps = new PerfectScrollbar(container, {
          wheelSpeed: 2,
          wheelPropagation: true,
          minScrollbarLength: 20
        });
    
        // Data Picker Initialization
        $('.datepicker').pickadate();
    
        // Material Select Initialization
        $(document).ready(function () {
          $('.mdb-select').material_select();
        });
    
        // Tooltips Initialization
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })
    
      </script>
    
<script>
        $(function () {
          let data = {
            labels: ["January", "February", "March", "April", "May", "June", "July"],
            datasets: [{
              label: "My First dataset",
              fillColor: "rgba(220,220,220,0.2)",
              strokeColor: "rgba(220,220,220,1)",
              pointColor: "rgba(220,220,220,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(0,0,0,.15)",
              data: [65, 59, 80, 81, 56, 55, 40],
              backgroundColor: "#4CAF50",
            }, {
              label: "My Second dataset",
              fillColor: "rgba(255,255,255,.25)",
              strokeColor: "rgba(255,255,255,.75)",
              pointColor: "#fff",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(0,0,0,.15)",
              data: [28, 48, 40, 19, 86, 27, 90]
            }]
          };
    
    
          let dataPie = [{
            value: 300,
            color: "#4caf50",
            highlight: "#66bb6a",
            label: "Google Chrome"
          }, {
            value: 50,
            color: "#03a9f4",
            highlight: "#29b6f6",
            label: "Edge"
          }, {
            value: 100,
            color: "#d32f2f",
            highlight: "#e53935",
            label: "Firefox"
          }]
    
          let option = {
            responsive: true,
            // set font color
            scaleFontColor: "#fff",
            // font family
            defaultFontFamily: "'Roboto', sans-serif",
            // background grid lines color
            scaleGridLineColor: "rgba(255,255,255,.1)",
            // hide vertical lines
            scaleShowVerticalLines: false,
          };
    
          // // Get the context of the canvas element we want to select
          // var ctx = document.getElementById("sales").getContext('2d');
          // var myLineChart = new Chart(ctx).Line(data, option); //'Line' defines type of the chart.
    
          // // Get the context of the canvas element we want to select
          // var ctx = document.getElementById("conversion").getContext('2d');
          // var myRadarChart = new Chart(ctx).Radar(data, option);
    
          // Get the context of the canvas element we want to select
    
          //bar
          let ctxB = document.getElementById("traffic").getContext('2d');
          let myBarChart = new Chart(ctxB, {
            type: 'bar',
            data: {
              labels: ["January", "Febuary", "March", "April", "May", "June"],
              datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)',
                  'rgba(255, 255, 255, 0.3)'
                ],
                borderColor: [
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)',
                  'rgba(255, 255, 255, 1)'
                ],
                borderWidth: 1
              }]
            },
            options: {
              legend: {
                labels: {
                  fontColor: "white"
                }
              },
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero: true,
                    fontColor: "white"
                  }
                }],
                xAxes: [{
                  ticks: {
                    fontColor: "white"
                  }
                }]
              }
            }
          });
    
          //pie
          let ctxP = document.getElementById("doughnutChart").getContext('2d');
          let myPieChart = new Chart(ctxP, {
            type: 'doughnut',
            data: {
              labels: ["March", "April", "May", "June"],
              datasets: [{
                data: [160, 50, 80, 60],
                backgroundColor: ["#4285F4", "#ffbb33", "#29b6f6", "#FF5252"],
                hoverBackgroundColor: ["#6ea0f2", "#fec451", "#52c3f6", "#fa6e6e"]
              }]
            },
            options: {
              responsive: true
            }
          });
    
        });
    
      </script>
    
<script>
        $(function () {
          $('.min-chart#chart-sales').easyPieChart({
            barColor: "#4caf50",
            onStep: function (from, to, percent) {
              $(this.el).find('.percent').text(Math.round(percent));
            }
          });
        });
    
        $(function () {
          $('#dark-mode').on('click', function (e) {
    
            e.preventDefault();
    
            $('footer, .card').toggleClass('dark-card-admin');
            $('body, .navbar').toggleClass('white-skin navy-blue-skin');
            $(this).toggleClass('white text-dark btn-outline-black');
            $('body').toggleClass('dark-bg-admin');
            $('h6, h1, h2, .card, p, td, th, i, li a, h4, input, label').not(
              '#slide-out i, #slide-out a, .dropdown-item i, .dropdown-item').toggleClass('text-white');
            $('.btn-dash').toggleClass('grey blue').toggleClass('lighten-3 darken-3');
            $('.gradient-card-header').toggleClass('white black lighten-4');
            $('.list-panel a').toggleClass('navy-blue-bg-a text-white').toggleClass('list-group-border');
            $('.mode').toggleClass('dark-bg-admin white-text');
    
          });
        });
    
      </script>
    
@await RenderSectionAsync("Scripts", required: false)
</body>
}

</html>
